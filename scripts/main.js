// =============== Variables ==================
const task = document.querySelector(".name")
const date = document.querySelector(".date")
const description = document.querySelector(".description")
const ajouter = document.querySelector(".add")
const inTube = document.querySelector(".tasksInTube")
const doneTube = document.querySelector(".numberOfTasks")
const sort = document.querySelector(".sort")


//============== Tableau d'objets ==========

let myTasks = []
let myFinishedTasks = []

//============== FONCTIONS =================

// *** ajoute une nouvelle t√¢che dans le tableau d'objet et sauve ce tab dans le localStorage
const addNewTask = (quoi, quand, jour, mois, ann√©e, comment) => {
    let newTaskLine = {
        name : quoi,
        date : quand,
        day : jour,
        month : mois,
        year : ann√©e,
        description : comment,
    }
    myTasks.push(newTaskLine)
    localStorage.setItem('t√¢ches', JSON.stringify(myTasks))
    console.log(myTasks);
}
// *** affiche les t√¢ches dans le partie "tube"
const printTasks = (tab) => {
    if (tab.length === 0) {
        inTube.innerHTML = `No task in the tube`
    }

    else { 
        inTube.innerHTML = ''
        tab.forEach((tabElement, index) => {
        inTube.innerHTML +=
        `
        <div id="single-line" data-index="${index}"><details><summary><input type="checkbox" class="checkbox">${tabElement.name}</summary>
        <p>${tabElement.description}</p>
        </details><div class="end-side"><span class="day">${tabElement.day}</span>/<span class="month">${tabElement.month +1}</span>/<span class="year">${tabElement.year}</span><span class="delete" style="cursor:pointer">üóëÔ∏è</span></div></div>
        `
        /*const checkbox = doneTube.querySelector('.checkbox')
        checkbox.cheked = true;*/
        })
    };
}
const addFinishedTask = (quoi, quand, jour, mois, ann√©e, comment) => {
    let newTaskLine = {
        name : quoi,
        date : quand,
        day : jour,
        month : mois,
        year : ann√©e,
        description : comment,
    }
    myFinishedTasks.push(newTaskLine)
    localStorage.setItem('t√¢ches_finies', JSON.stringify(myFinishedTasks))
    console.log(myFinishedTasks);
}

const printFinishedTasks = (tab) => {
    if (tab.length === 0) {
        doneTube.innerHTML = `No task done`
    }

    else { 
        doneTube.innerHTML = ''
        tab.forEach((tabElement, index) => {
        doneTube.innerHTML +=
        `
        <div id="single-line" data-index="${index}"><div class="start-side"><input type="checkbox" class="checkbox" checked>${tabElement.name}</div>
        <div class="end-side"><span class="delete" style="cursor:pointer">üóëÔ∏è</span></div></div>
        `

        })
    }

    if (myFinishedTasks.length > 5) {
        myFinishedTasks.splice(0, 1)
        printFinishedTasks(myFinishedTasks)
        localStorage.setItem('t√¢ches_finies', JSON.stringify(myFinishedTasks))
    }
}
// *** supprime la t√¢che sur laquelle on a cliqu√© en fonction de sa place dans le tableau d'objets
const deleteTask = (lineToKill) => {
    myTasks.splice(lineToKill, 1)
    printTasks(myTasks)
    localStorage.setItem('t√¢ches', JSON.stringify(myTasks))
}
// *** supprime la t√¢che finie sur laquelle on a cliqu√© en fonction de sa place dans le tableau d'objets dans la section DONE
const deleteFinishedTask = (lineToKill) => {
    myFinishedTasks.splice(lineToKill, 1)
    localStorage.setItem('t√¢ches_finies', JSON.stringify(myFinishedTasks))
    printFinishedTasks(myFinishedTasks)
}

// *** classe les t√¢ches en fonction de leur date d'√©ch√©ance respective
const sortTasks = (tab) => {
    //on formate la date vers une syntaxe standard avec new Date() pour que toutes les dates soient au m√™me format avant que le tri s'effectue
    tab.sort((a, b) => {
        let dateA = new Date(a.date)
        let dateB = new Date(b.date)
        return dateA - dateB;
    });
    
}

//============== EVENTS =================

// *** permet d'afficher les t√¢ches √† l'ouverture de la page si √©ventuellement des t√¢ches ont d√©j√† √©t√© stock√©es dans l'espace local
myTasks = JSON.parse(localStorage.getItem('t√¢ches')) || []
printTasks(myTasks)
myFinishedTasks = JSON.parse(localStorage.getItem('t√¢ches_finies')) || []
printFinishedTasks(myFinishedTasks)
console.log(`Mon tableau au rafraichissement :${myTasks}`);
console.log(myTasks);
// Le sigle || est un op√©rateur de coalescence nulle, il renvoie la premi√®re valeur qui est non falsy (c‚Äôest-√†-dire diff√©rente de null, undefined, false, 0, NaN ou une cha√Æne vide)

// *** permet d'associer une action au clic sur le bouton "AJOUTER"
ajouter.addEventListener('click', () => {

    // *** on saucissonne la date pour en extraire le jour, le mois et l'ann√©e. Donn√©es qu'on injectera dans la liste avec une syntaxe adapt√©e au format de lecture des utilisateurs francophones.
    let objectDate = new Date(date.value);
    let formattedDate = objectDate.toISOString().substring(0,10);
    console.log(objectDate);
    let day = objectDate.getDate()
    let month = objectDate.getMonth()
    let year = objectDate.getFullYear()
    console.log(day);
    console.log(month);
    console.log(year);

    addNewTask(task.value, formattedDate, day, month, year, description.value);
    printTasks(myTasks)
    console.log(`Mon tableau √† l'ajout d'une t√¢che :${myTasks}`)
    console.log(myTasks);
    task.value = ""
    date.value = ""
    description.value = ""
});

// ** tri des t√¢ches en fonction de leur date, lors du clic sur le bouton "TRIER"
sort.addEventListener('click', () => {
    sortTasks(myTasks)
    printTasks(myTasks)
    localStorage.setItem('t√¢ches', JSON.stringify(myTasks))
    console.log(myTasks);
})

// *** ‚ùå permet d'√©liminer une t√¢che au clic sur la ‚ùå associ√©e √† cette t√¢che
inTube.addEventListener('click', function(e) {
    if (e.target.classList.contains('delete')) {
      let placeDansTableau = parseInt(e.target.closest('#single-line').getAttribute('data-index'))
      console.log(placeDansTableau);
      deleteTask(placeDansTableau)
    }
  });
// ***  permet de d√©placer une t√¢che coch√©e et donc finie vers la partie DONE
inTube.addEventListener('click', (event) => {

    if (event.target.checked) {

        let placeDansTableau = parseInt(event.target.closest('#single-line').getAttribute('data-index'))
        console.log(placeDansTableau);

        let description = myTasks[placeDansTableau].description
        let name = myTasks[placeDansTableau].name
        let day = myTasks[placeDansTableau].day
        let month = myTasks[placeDansTableau].month
        let year = myTasks[placeDansTableau].year
        let formattedDate = myTasks[placeDansTableau].date

        addFinishedTask(name, formattedDate, day, month, year, description);
        printFinishedTasks(myFinishedTasks)

        deleteTask(placeDansTableau)
        // La case √† cocher est coch√©e
        console.log("La case √† cocher est coch√©e !");
        console.log(myFinishedTasks);
    } 
    else {
        // La case √† cocher est d√©coch√©e
        console.log("La case √† cocher est d√©coch√©e !");
        // Ajoutez ici le code que vous souhaitez ex√©cuter
    }
  
  });

doneTube.addEventListener('click', (e) => {
    if (e.target.classList.contains('delete')) {
        let placeDansTableau = parseInt(e.target.closest('#single-line').getAttribute('data-index'))
      console.log(placeDansTableau);
      deleteFinishedTask(placeDansTableau)
    }
  });
doneTube.addEventListener('click', (event) => {
    if (!event.target.checked) {
        let placeDansTableau = parseInt(event.target.closest('#single-line').getAttribute('data-index'))
        console.log(placeDansTableau);

        let description = myFinishedTasks[placeDansTableau].description
        let name = myFinishedTasks[placeDansTableau].name
        let day = myFinishedTasks[placeDansTableau].day
        let month = myFinishedTasks[placeDansTableau].month
        let year = myFinishedTasks[placeDansTableau].year
        let formattedDate = myFinishedTasks[placeDansTableau].date

        addNewTask(name, formattedDate, day, month, year, description);
        printTasks(myTasks)

        deleteFinishedTask(placeDansTableau)
        // La case √† cocher est d√©coch√©e
        console.log("La case √† cocher est d√©coch√©e !");
    }
    else {
        
        console.log("La case √† cocher est coch√©e !");
        // Ajoutez ici le code que vous souhaitez ex√©cuter
    }
})